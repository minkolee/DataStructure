package alog4e.chapter01.section02.exercise;

/**
 * 分析一下, 由于压栈的顺序是固定的, 即 0 1 2 3 4 5 6 7 8 9
 * 根据栈的特点, 可以每次压一个弹一个, 还是原来顺序, 只要压入了两个或者以上, 再弹的时候必定改变顺序
 * a 可能产生, 先压到4的时候, 弹出5个数 ,在压入剩下的5个数字, 再弹出
 * b 这种情况不可能, 由于第一个弹栈的是4, 则之前必定压入了0123, 则不管中间穿插了多少数字, 0123的整体顺序一定是 3 2 1 0
 * c 可能产生, 首先弹2, 则至少压入了 0 1 ,可见 2 1 0 的整体顺序对的, 再看剩下部分, 也就是5, 必然先压入了4 3, 5 4 3的整体顺序也对, 再看剩下的数字是6789, 可以压1弹1, 这种也是可能的
 * d 43210是可能的顺序,之后压1弹1, 也是可以的
 * e 可能产生, 先弹1, 说明整体顺序是10, 中间压1弹1, 也是可以的
 * f 不可能产生. 一开始就是0, 说明必然先压0弹0, 所以只需要看后边的部分. 后边弹4, 说明至少压入了321, 而4321的整体顺序是 4312, 不符合逆序. 所以不会有这种情况
 * g 可能产生.同样查看顺序, 10可能, 然后是4, 432也正确, 之后是 7 ,765整体顺序正确, 然后是98, 也正确
 * h 不可能产生.210顺序正确, 435顺序不正确, 所以不可能.
 * 这一道题目的核心就是弹出的数值 和小于其的数字必然整体是逆序关系.
 */

public class EX010303 {
    //添加isFull, 只需要判断N是不是已经等于初始化的数组长度

}
